<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- ====================================================================== -->
	<!-- GENERAL PROJECT INFORMATION -->
	<!-- ====================================================================== -->

	<!-- Project Configuration -->
	<parent>
		<groupId>at.schrogl.fsfinance</groupId>
		<artifactId>fsfinance-pom</artifactId>
		<version>0.1.0-SNAPSHOT</version>
		<relativePath>../fsfinance-pom/pom.xml</relativePath>
	</parent>

	<artifactId>fsfinance-persistence</artifactId>
	<packaging>jar</packaging>

	<properties>
		<version.hibernate-maven-plugin>2.0.0</version.hibernate-maven-plugin>
		<version.hibernate>5.0.10.Final</version.hibernate>
	</properties>

	<!-- ====================================================================== -->
	<!-- PROFILE: database -->
	<!-- ====================================================================== -->

	<profiles>
		<profile>
			<id>database</id>
			<build>
				<plugins>
					<plugin>
						<groupId>de.juplo</groupId>
						<artifactId>hibernate-maven-plugin</artifactId>
						<version>${version.hibernate-maven-plugin}</version>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>create</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Only create DDL script, don't actually create database -->
							<export>false</export>

							<!-- Show DDL script in Maven's output and make it pretty -->
							<show>true</show>
							<format>true</format>
							<outputFile>${project.build.directory}/createdb-${project.version}.sql</outputFile>

							<!-- Database dialect to use and classes to scan for JPA annotations -->
							<dialect>org.hibernate.dialect.PostgreSQLDialect</dialect>
							<driver>org.postgresql.Driver</driver>
							<scanClasses>true</scanClasses>
							<scanDependencies>none</scanDependencies>
							<scanTestClasses>false</scanTestClasses>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- ====================================================================== -->
	<!-- Dependencies -->
	<!-- ====================================================================== -->

	<dependencies>
		<!-- START Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<exclusion>
					<!-- Replace Spring's use of commons logging with SLF4J API -->
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<!-- END Spring Framework -->

		<!-- START Testing Dependencies -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${version.hibernate}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- END Testing Dependencies -->
	</dependencies>

</project>
